$fn = 50;


difference() {
	union() {
		hull() {
			translate(v = [-295.0000000000, 295.0000000000, 0]) {
				cylinder(h = 15, r = 5);
			}
			translate(v = [295.0000000000, 295.0000000000, 0]) {
				cylinder(h = 15, r = 5);
			}
			translate(v = [-295.0000000000, -295.0000000000, 0]) {
				cylinder(h = 15, r = 5);
			}
			translate(v = [295.0000000000, -295.0000000000, 0]) {
				cylinder(h = 15, r = 5);
			}
		}
		translate(v = [292.5000000000, 7.5000000000, 0]) {
			hull() {
				translate(v = [-2.5000000000, 302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
				translate(v = [2.5000000000, 302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
				translate(v = [-2.5000000000, -302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
				translate(v = [2.5000000000, -302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
			}
		}
		translate(v = [-292.5000000000, 7.5000000000, 0]) {
			hull() {
				translate(v = [-2.5000000000, 302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
				translate(v = [2.5000000000, 302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
				translate(v = [-2.5000000000, -302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
				translate(v = [2.5000000000, -302.5000000000, 0]) {
					cylinder(h = 9, r = 5);
				}
			}
		}
	}
	union() {
		translate(v = [292.5000000000, 307.5000000000, 0]) {
			rotate(a = [0, 0, 0]) {
				difference() {
					union() {
						translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, 5]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, 5.3000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						linear_extrude(height = 5) {
							polygon(points = [[5.9142500000, 0.0000000000], [2.9571250000, 5.1218907443], [-2.9571250000, 5.1218907443], [-5.9142500000, 0.0000000000], [-2.9571250000, -5.1218907443], [2.9571250000, -5.1218907443]]);
						}
						translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, 5]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, 5.3000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, 5]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, 5.3000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
					}
					union();
				}
			}
		}
		translate(v = [-292.5000000000, 307.5000000000, 0]) {
			rotate(a = [0, 0, 0]) {
				difference() {
					union() {
						translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, 5]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, 5.3000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						linear_extrude(height = 5) {
							polygon(points = [[5.9142500000, 0.0000000000], [2.9571250000, 5.1218907443], [-2.9571250000, 5.1218907443], [-5.9142500000, 0.0000000000], [-2.9571250000, -5.1218907443], [2.9571250000, -5.1218907443]]);
						}
						translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, 5]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, 5.3000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -3.0000000000, 5]) {
							cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
						}
						translate(v = [-1.8000000000, -1.8000000000, 5.3000000000]) {
							cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
						}
					}
					union();
				}
			}
		}
		translate(v = [292.5000000000, 307.5000000000, -100.0000000000]) {
			cylinder(h = 200, r = 3.2500000000);
		}
		translate(v = [-292.5000000000, 307.5000000000, -100.0000000000]) {
			cylinder(h = 200, r = 3.2500000000);
		}
		#translate(v = [-299.5000000000, -299.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-299.5000000000, -179.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-299.5000000000, -59.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-299.5000000000, 60.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-299.5000000000, 180.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-179.5000000000, -299.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-179.5000000000, -179.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-179.5000000000, -59.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-179.5000000000, 60.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-179.5000000000, 180.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-59.5000000000, -299.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-59.5000000000, -179.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-59.5000000000, -59.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-59.5000000000, 60.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [-59.5000000000, 180.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [60.5000000000, -299.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [60.5000000000, -179.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [60.5000000000, -59.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [60.5000000000, 60.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [60.5000000000, 180.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [180.5000000000, -299.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [180.5000000000, -179.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [180.5000000000, -59.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [180.5000000000, 60.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
		#translate(v = [180.5000000000, 180.5000000000, 1]) {
			cube(size = [119, 119, 30]);
		}
	}
}